<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <!-- Spring JSP tag: Escape the content/value of tag -->
    <context-param>
        <param-name>defaultHtmlEscape</param-name>
        <param-value>true</param-value>
    </context-param>
    <!-- Spring configuration files to load -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value><![CDATA[
            classpath:/META-INF/spring/backbase-portal-application-config.xml
            classpath:/META-INF/spring/backbase-portal-integration-config.xml
            classpath:/META-INF/spring/backbase-portal-presentation-security.xml
            classpath:/META-INF/spring/backbase-portal-presentation-content.xml
            classpath:/META-INF/spring/backbase-portal-presentation-ssr.xml
            classpath:/META-INF/spring/backbase-portal-business-security.xml
            classpath:backbase-ptc.xml
            classpath:/META-INF/spring/backbase-integration.xml
        ]]></param-value>
    </context-param>

    <!-- Force the web server to use UTF-8 in requests and responses. WARNING:
        This filter should be the first to run, otherwise form login with non-latin
        characters is broken. PSFIVE-476 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <!-- Filter allowing override of user agent sent by browser -->
    <filter>
        <filter-name>uAgentOverrideFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <!-- Filter for setting the UAgentInfo -->
    <filter>
        <filter-name>uAgentInfoGatheringFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <!-- Spring Security -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <!-- Cookie Management Filter will populate cookies into a ThreadLocal and set modified cookies before returning -->
    <filter>
        <filter-name>threadLocalManagerFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <!-- SPEED-68: Implement web cache filter: note that web cache should be implemented behind the security filter -->
    <!-- Caching filter -->
    <filter>
        <filter-name>backbasePageCachingFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>suppressStackTraces</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>cacheName</param-name>
            <param-value>webCache</param-value>
        </init-param>
        <!-- required to call the correct init() method from the filter's hierarchy so that filterConfig is not null -->
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <!-- Filter for setting the urlLevelCacheFilter -->
    <filter>
        <filter-name>urlLevelCacheFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <!-- Filter for setting the urlFilter -->
    <filter>
        <filter-name>urlFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>uAgentOverrideFilter</filter-name>
        <servlet-name>Portal Foundation Spring MVC</servlet-name>
    </filter-mapping>
    <filter-mapping>
        <filter-name>uAgentInfoGatheringFilter</filter-name>
        <servlet-name>Portal Foundation Spring MVC</servlet-name>
    </filter-mapping>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>threadLocalManagerFilter</filter-name>
        <servlet-name>Portal Foundation Spring MVC</servlet-name>
    </filter-mapping>
    <filter-mapping>
        <filter-name>backbasePageCachingFilter</filter-name>
        <servlet-name>Portal Foundation Spring MVC</servlet-name>
    </filter-mapping>
    <filter-mapping>
        <filter-name>urlLevelCacheFilter</filter-name>
        <servlet-name>Portal Foundation Spring MVC</servlet-name>
    </filter-mapping>
    <filter-mapping>
        <filter-name>urlFilter</filter-name>
        <servlet-name>Portal Foundation Spring MVC</servlet-name>
    </filter-mapping>
    <!-- Creates the Spring Container shared by all Servlets and Filters -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- Needed for targeting module to access current servlet request -->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <context-param>
        <param-name>contextInitializerClasses</param-name>
        <param-value>com.backbase.portal.foundation.integration.context.BackbaseContextInitializer,com.backbase.portal.ptc.config.PtcApplicationContextInitializer</param-value>
    </context-param>
    <!-- Handles Foundation Spring requests -->
    <servlet>
        <servlet-name>Portal Foundation Spring MVC</servlet-name>
        <servlet-class>com.backbase.portal.foundation.presentation.renderer.PortalDispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:/META-INF/spring/backbase-portal-presentation-config.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet>
        <servlet-name>Integration Servlet</servlet-name>
        <servlet-class>com.backbase.portal.integration.core.servlet.IntegrationServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>PTC Servlet</servlet-name>
        <servlet-class>com.backbase.portal.foundation.presentation.renderer.PtcServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>PTC Servlet</servlet-name>
        <url-pattern>/proxy/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>Integration Servlet</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>Portal Foundation Spring MVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
    
    
     <servlet>
        <servlet-name>Jersey Web Application</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>org.sachin.restjava.messenger</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Jersey Web Application</servlet-name>
        <url-pattern>/webapi/*</url-pattern>
    </servlet-mapping>

       <session-config>
        <session-timeout>20</session-timeout>
    </session-config>

    <!-- ServletContextListeners -->
    <listener>
        <listener-class>
            com.backbase.portal.foundation.presentation.listener.PortalFoundationContextListener
        </listener-class>
    </listener>

    <resource-ref>
        <description>Portal Datasource</description>
        <res-ref-name>jdbc/portalDS</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

    <resource-ref>
        <description>Portal Audit Datasource</description>
        <res-ref-name>jdbc/auditDS</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

    <!-- Optional datasources
        <resource-ref>
            <description>Portal Audit Datasource</description>
            <res-ref-name>jdbc/auditDS</res-ref-name>
            <res-type>javax.sql.DataSource</res-type>
            <res-auth>Container</res-auth>
        </resource-ref>

        <resource-ref>
            <description>Tracking Datasource</description>
            <res-ref-name>jdbc/trackingDS</res-ref-name>
            <res-type>javax.sql.DataSource</res-type>
            <res-auth>Container</res-auth>
        </resource-ref>
    -->

    <env-entry>
        <env-entry-name>backbase/config</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
    </env-entry>

    <mime-mapping>
        <extension>png</extension>
        <mime-type>image/png</mime-type>
    </mime-mapping>

</web-app>
